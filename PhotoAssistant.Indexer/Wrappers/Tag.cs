//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class Tag : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Tag(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Tag obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Tag() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_Tag(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Tag(TagDirectory parent, SWIGTYPE_p_FILE f, int arg2) : this(libPhotoAssistantImageProcessingPINVOKE.new_Tag__SWIG_0(TagDirectory.getCPtr(parent), SWIGTYPE_p_FILE.getCPtr(f), arg2), true) {
  }

  public Tag(TagDirectory parent, TagAttrib attr) : this(libPhotoAssistantImageProcessingPINVOKE.new_Tag__SWIG_1(TagDirectory.getCPtr(parent), TagAttrib.getCPtr(attr)), true) {
  }

  public Tag(TagDirectory parent, TagAttrib attr, SWIGTYPE_p_unsigned_char data, TagType t) : this(libPhotoAssistantImageProcessingPINVOKE.new_Tag__SWIG_2(TagDirectory.getCPtr(parent), TagAttrib.getCPtr(attr), SWIGTYPE_p_unsigned_char.getCPtr(data), (int)t), true) {
  }

  public Tag(TagDirectory parent, TagAttrib attr, int data, TagType t) : this(libPhotoAssistantImageProcessingPINVOKE.new_Tag__SWIG_3(TagDirectory.getCPtr(parent), TagAttrib.getCPtr(attr), data, (int)t), true) {
  }

  public Tag(TagDirectory parent, TagAttrib attr, string data) : this(libPhotoAssistantImageProcessingPINVOKE.new_Tag__SWIG_4(TagDirectory.getCPtr(parent), TagAttrib.getCPtr(attr), data), true) {
  }

  public void initType(SWIGTYPE_p_unsigned_char data, TagType type) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initType(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(data), (int)type);
  }

  public void initInt(int data, TagType t, int count) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initInt__SWIG_0(swigCPtr, data, (int)t, count);
  }

  public void initInt(int data, TagType t) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initInt__SWIG_1(swigCPtr, data, (int)t);
  }

  public void initString(string text) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initString(swigCPtr, text);
  }

  public void initSubDir() {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initSubDir__SWIG_0(swigCPtr);
  }

  public void initSubDir(TagDirectory dir) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initSubDir__SWIG_1(swigCPtr, TagDirectory.getCPtr(dir));
  }

  public void initUndefArray(string data, int len) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initUndefArray(swigCPtr, data, len);
  }

  public void initLongArray(string data, int len) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initLongArray(swigCPtr, data, len);
  }

  public void initRational(int num, int den) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_initRational(swigCPtr, num, den);
  }

  public int getID() {
    int ret = libPhotoAssistantImageProcessingPINVOKE.Tag_getID(swigCPtr);
    return ret;
  }

  public int getCount() {
    int ret = libPhotoAssistantImageProcessingPINVOKE.Tag_getCount(swigCPtr);
    return ret;
  }

  public TagType getType() {
    TagType ret = (TagType)libPhotoAssistantImageProcessingPINVOKE.Tag_getType(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_unsigned_char getValue() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_getValue(swigCPtr);
    SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_signed_char getSignedValue() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_getSignedValue(swigCPtr);
    SWIGTYPE_p_signed_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_signed_char(cPtr, false);
    return ret;
  }

  public TagAttrib getAttrib() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_getAttrib(swigCPtr);
    TagAttrib ret = (cPtr == global::System.IntPtr.Zero) ? null : new TagAttrib(cPtr, false);
    return ret;
  }

  public ByteOrder getOrder() {
    ByteOrder ret = (ByteOrder)libPhotoAssistantImageProcessingPINVOKE.Tag_getOrder(swigCPtr);
    return ret;
  }

  public TagDirectory getParent() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_getParent(swigCPtr);
    TagDirectory ret = (cPtr == global::System.IntPtr.Zero) ? null : new TagDirectory(cPtr, false);
    return ret;
  }

  public int getValueSize() {
    int ret = libPhotoAssistantImageProcessingPINVOKE.Tag_getValueSize(swigCPtr);
    return ret;
  }

  public bool getOwnMemory() {
    bool ret = libPhotoAssistantImageProcessingPINVOKE.Tag_getOwnMemory(swigCPtr);
    return ret;
  }

  public int toInt(int ofs, TagType astype) {
    int ret = libPhotoAssistantImageProcessingPINVOKE.Tag_toInt__SWIG_0(swigCPtr, ofs, (int)astype);
    return ret;
  }

  public int toInt(int ofs) {
    int ret = libPhotoAssistantImageProcessingPINVOKE.Tag_toInt__SWIG_1(swigCPtr, ofs);
    return ret;
  }

  public int toInt() {
    int ret = libPhotoAssistantImageProcessingPINVOKE.Tag_toInt__SWIG_2(swigCPtr);
    return ret;
  }

  public void fromInt(int v) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_fromInt(swigCPtr, v);
  }

  public double toDouble(int ofs) {
    double ret = libPhotoAssistantImageProcessingPINVOKE.Tag_toDouble__SWIG_0(swigCPtr, ofs);
    return ret;
  }

  public double toDouble() {
    double ret = libPhotoAssistantImageProcessingPINVOKE.Tag_toDouble__SWIG_1(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_double toDoubleArray(int ofs) {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_toDoubleArray__SWIG_0(swigCPtr, ofs);
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_double toDoubleArray() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_toDoubleArray__SWIG_1(swigCPtr);
    SWIGTYPE_p_double ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    return ret;
  }

  public void toRational(SWIGTYPE_p_int num, SWIGTYPE_p_int denom, int ofs) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_toRational__SWIG_0(swigCPtr, SWIGTYPE_p_int.getCPtr(num), SWIGTYPE_p_int.getCPtr(denom), ofs);
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public void toRational(SWIGTYPE_p_int num, SWIGTYPE_p_int denom) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_toRational__SWIG_1(swigCPtr, SWIGTYPE_p_int.getCPtr(num), SWIGTYPE_p_int.getCPtr(denom));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public void toString(string buffer, int ofs) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_toString__SWIG_0(swigCPtr, buffer, ofs);
  }

  public void toString(string buffer) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_toString__SWIG_1(swigCPtr, buffer);
  }

  public void fromString(string v, int size) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_fromString__SWIG_0(swigCPtr, v, size);
  }

  public void fromString(string v) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_fromString__SWIG_1(swigCPtr, v);
  }

  public void setInt(int v, int ofs, TagType astype) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_setInt__SWIG_0(swigCPtr, v, ofs, (int)astype);
  }

  public void setInt(int v, int ofs) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_setInt__SWIG_1(swigCPtr, v, ofs);
  }

  public void setInt(int v) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_setInt__SWIG_2(swigCPtr, v);
  }

  public string valueToString() {
    string ret = libPhotoAssistantImageProcessingPINVOKE.Tag_valueToString(swigCPtr);
    return ret;
  }

  public string nameToString(int i) {
    string ret = libPhotoAssistantImageProcessingPINVOKE.Tag_nameToString__SWIG_0(swigCPtr, i);
    return ret;
  }

  public string nameToString() {
    string ret = libPhotoAssistantImageProcessingPINVOKE.Tag_nameToString__SWIG_1(swigCPtr);
    return ret;
  }

  public void valueFromString(string value) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_valueFromString(swigCPtr, value);
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public int calculateSize() {
    int ret = libPhotoAssistantImageProcessingPINVOKE.Tag_calculateSize(swigCPtr);
    return ret;
  }

  public int write(int offs, int dataOffs, SWIGTYPE_p_unsigned_char buffer) {
    int ret = libPhotoAssistantImageProcessingPINVOKE.Tag_write(swigCPtr, offs, dataOffs, SWIGTYPE_p_unsigned_char.getCPtr(buffer));
    return ret;
  }

  public Tag clone(TagDirectory parent) {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_clone(swigCPtr, TagDirectory.getCPtr(parent));
    Tag ret = (cPtr == global::System.IntPtr.Zero) ? null : new Tag(cPtr, false);
    return ret;
  }

  public bool getKeep() {
    bool ret = libPhotoAssistantImageProcessingPINVOKE.Tag_getKeep(swigCPtr);
    return ret;
  }

  public void setKeep(bool k) {
    libPhotoAssistantImageProcessingPINVOKE.Tag_setKeep(swigCPtr, k);
  }

  public bool isDirectory() {
    bool ret = libPhotoAssistantImageProcessingPINVOKE.Tag_isDirectory(swigCPtr);
    return ret;
  }

  public TagDirectory getDirectory(int i) {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_getDirectory__SWIG_0(swigCPtr, i);
    TagDirectory ret = (cPtr == global::System.IntPtr.Zero) ? null : new TagDirectory(cPtr, false);
    return ret;
  }

  public TagDirectory getDirectory() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Tag_getDirectory__SWIG_1(swigCPtr);
    TagDirectory ret = (cPtr == global::System.IntPtr.Zero) ? null : new TagDirectory(cPtr, false);
    return ret;
  }

  public MNKind getMakerNoteFormat() {
    MNKind ret = (MNKind)libPhotoAssistantImageProcessingPINVOKE.Tag_getMakerNoteFormat(swigCPtr);
    return ret;
  }

}

}
