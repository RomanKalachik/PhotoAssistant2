//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class DirPyrDenoiseParams : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DirPyrDenoiseParams(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(DirPyrDenoiseParams obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~DirPyrDenoiseParams() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_DirPyrDenoiseParams(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SWIGTYPE_p_std__vectorT_double_t lcurve {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_lcurve_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_lcurve_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t cccurve {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_cccurve_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_cccurve_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public bool enabled {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_enabled_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_enabled_get(swigCPtr);
      return ret;
    } 
  }

  public bool enhance {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_enhance_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_enhance_get(swigCPtr);
      return ret;
    } 
  }

  public bool median {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_median_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_median_get(swigCPtr);
      return ret;
    } 
  }

  public bool autochroma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_autochroma_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_autochroma_get(swigCPtr);
      return ret;
    } 
  }

  public bool perform {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_perform_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_perform_get(swigCPtr);
      return ret;
    } 
  }

  public double luma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_luma_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_luma_get(swigCPtr);
      return ret;
    } 
  }

  public double Ldetail {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_Ldetail_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_Ldetail_get(swigCPtr);
      return ret;
    } 
  }

  public double chroma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_chroma_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_chroma_get(swigCPtr);
      return ret;
    } 
  }

  public double redchro {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_redchro_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_redchro_get(swigCPtr);
      return ret;
    } 
  }

  public double bluechro {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_bluechro_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_bluechro_get(swigCPtr);
      return ret;
    } 
  }

  public double gamma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_gamma_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_gamma_get(swigCPtr);
      return ret;
    } 
  }

  public string dmethod {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_dmethod_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_dmethod_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string Lmethod {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_Lmethod_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_Lmethod_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string Cmethod {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_Cmethod_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_Cmethod_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string C2method {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_C2method_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_C2method_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string smethod {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_smethod_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_smethod_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string medmethod {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_medmethod_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_medmethod_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string methodmed {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_methodmed_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_methodmed_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string rgbmethod {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_rgbmethod_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_rgbmethod_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int passes {
    set {
      libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_passes_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_passes_get(swigCPtr);
      return ret;
    } 
  }

  public DirPyrDenoiseParams() : this(libPhotoAssistantImageProcessingPINVOKE.new_DirPyrDenoiseParams(), true) {
  }

  public void setDefaults() {
    libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_setDefaults(swigCPtr);
  }

  public void getCurves(SWIGTYPE_p_rtengine__NoiseCurve lCurve, SWIGTYPE_p_rtengine__NoiseCurve cCurve) {
    libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_getCurves(swigCPtr, SWIGTYPE_p_rtengine__NoiseCurve.getCPtr(lCurve), SWIGTYPE_p_rtengine__NoiseCurve.getCPtr(cCurve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void getDefaultNoisCurve(SWIGTYPE_p_std__vectorT_double_t curve) {
    libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_getDefaultNoisCurve(SWIGTYPE_p_std__vectorT_double_t.getCPtr(curve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void getDefaultCCCurve(SWIGTYPE_p_std__vectorT_double_t curve) {
    libPhotoAssistantImageProcessingPINVOKE.DirPyrDenoiseParams_getDefaultCCCurve(SWIGTYPE_p_std__vectorT_double_t.getCPtr(curve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
