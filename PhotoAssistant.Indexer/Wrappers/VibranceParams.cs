//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class VibranceParams : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal VibranceParams(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(VibranceParams obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~VibranceParams() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_VibranceParams(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public bool enabled {
    set {
      libPhotoAssistantImageProcessingPINVOKE.VibranceParams_enabled_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.VibranceParams_enabled_get(swigCPtr);
      return ret;
    } 
  }

  public int pastels {
    set {
      libPhotoAssistantImageProcessingPINVOKE.VibranceParams_pastels_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.VibranceParams_pastels_get(swigCPtr);
      return ret;
    } 
  }

  public int saturated {
    set {
      libPhotoAssistantImageProcessingPINVOKE.VibranceParams_saturated_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.VibranceParams_saturated_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t psthreshold {
    set {
      libPhotoAssistantImageProcessingPINVOKE.VibranceParams_psthreshold_set(swigCPtr, SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.VibranceParams_psthreshold_get(swigCPtr);
      SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t(cPtr, false);
      return ret;
    } 
  }

  public bool protectskins {
    set {
      libPhotoAssistantImageProcessingPINVOKE.VibranceParams_protectskins_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.VibranceParams_protectskins_get(swigCPtr);
      return ret;
    } 
  }

  public bool avoidcolorshift {
    set {
      libPhotoAssistantImageProcessingPINVOKE.VibranceParams_avoidcolorshift_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.VibranceParams_avoidcolorshift_get(swigCPtr);
      return ret;
    } 
  }

  public bool pastsattog {
    set {
      libPhotoAssistantImageProcessingPINVOKE.VibranceParams_pastsattog_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.VibranceParams_pastsattog_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t skintonescurve {
    set {
      libPhotoAssistantImageProcessingPINVOKE.VibranceParams_skintonescurve_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.VibranceParams_skintonescurve_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public VibranceParams() : this(libPhotoAssistantImageProcessingPINVOKE.new_VibranceParams(), true) {
  }

}

}
