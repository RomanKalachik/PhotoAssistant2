//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class InitialImage : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal InitialImage(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(InitialImage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~InitialImage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_InitialImage(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual string getFileName() {
    string ret = libPhotoAssistantImageProcessingPINVOKE.InitialImage_getFileName(swigCPtr);
    return ret;
  }

  public virtual SWIGTYPE_p_cmsHPROFILE getEmbeddedProfile() {
    SWIGTYPE_p_cmsHPROFILE ret = new SWIGTYPE_p_cmsHPROFILE(libPhotoAssistantImageProcessingPINVOKE.InitialImage_getEmbeddedProfile(swigCPtr), true);
    return ret;
  }

  public virtual ImageMetaData getMetaData() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.InitialImage_getMetaData(swigCPtr);
    ImageMetaData ret = (cPtr == global::System.IntPtr.Zero) ? null : new ImageMetaData(cPtr, false);
    return ret;
  }

  public virtual ImageSource getImageSource() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.InitialImage_getImageSource(swigCPtr);
    ImageSource ret = (cPtr == global::System.IntPtr.Zero) ? null : new ImageSource(cPtr, false);
    return ret;
  }

  public virtual void increaseRef() {
    libPhotoAssistantImageProcessingPINVOKE.InitialImage_increaseRef(swigCPtr);
  }

  public virtual void decreaseRef() {
    libPhotoAssistantImageProcessingPINVOKE.InitialImage_decreaseRef(swigCPtr);
  }

  public static InitialImage load(string fname, bool isRaw, SWIGTYPE_p_int errorCode, ProgressListener pl) {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.InitialImage_load__SWIG_0(fname, isRaw, SWIGTYPE_p_int.getCPtr(errorCode), ProgressListener.getCPtr(pl));
    InitialImage ret = (cPtr == global::System.IntPtr.Zero) ? null : new InitialImage(cPtr, false);
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static InitialImage load(string fname, bool isRaw, SWIGTYPE_p_int errorCode) {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.InitialImage_load__SWIG_1(fname, isRaw, SWIGTYPE_p_int.getCPtr(errorCode));
    InitialImage ret = (cPtr == global::System.IntPtr.Zero) ? null : new InitialImage(cPtr, false);
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
