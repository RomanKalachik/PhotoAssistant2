//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class WBEntry : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal WBEntry(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(WBEntry obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~WBEntry() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_WBEntry(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public string ppLabel {
    set {
      libPhotoAssistantImageProcessingPINVOKE.WBEntry_ppLabel_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.WBEntry_ppLabel_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public WBTypes type {
    set {
      libPhotoAssistantImageProcessingPINVOKE.WBEntry_type_set(swigCPtr, (int)value);
    } 
    get {
      WBTypes ret = (WBTypes)libPhotoAssistantImageProcessingPINVOKE.WBEntry_type_get(swigCPtr);
      return ret;
    } 
  }

  public string GUILabel {
    set {
      libPhotoAssistantImageProcessingPINVOKE.WBEntry_GUILabel_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.WBEntry_GUILabel_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int temperature {
    set {
      libPhotoAssistantImageProcessingPINVOKE.WBEntry_temperature_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.WBEntry_temperature_get(swigCPtr);
      return ret;
    } 
  }

  public double green {
    set {
      libPhotoAssistantImageProcessingPINVOKE.WBEntry_green_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.WBEntry_green_get(swigCPtr);
      return ret;
    } 
  }

  public double equal {
    set {
      libPhotoAssistantImageProcessingPINVOKE.WBEntry_equal_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.WBEntry_equal_get(swigCPtr);
      return ret;
    } 
  }

  public WBEntry(string p, WBTypes t, string l, int temp, double green, double equal) : this(libPhotoAssistantImageProcessingPINVOKE.new_WBEntry(p, (int)t, l, temp, green, equal), true) {
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
