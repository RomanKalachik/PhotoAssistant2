//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class ProcessingJob : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ProcessingJob(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ProcessingJob obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ProcessingJob() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_ProcessingJob(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static ProcessingJob create(string fname, bool isRaw, ProcParams pparams) {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ProcessingJob_create__SWIG_0(fname, isRaw, ProcParams.getCPtr(pparams));
    ProcessingJob ret = (cPtr == global::System.IntPtr.Zero) ? null : new ProcessingJob(cPtr, false);
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static ProcessingJob create(InitialImage initialImage, ProcParams pparams) {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ProcessingJob_create__SWIG_1(InitialImage.getCPtr(initialImage), ProcParams.getCPtr(pparams));
    ProcessingJob ret = (cPtr == global::System.IntPtr.Zero) ? null : new ProcessingJob(cPtr, false);
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void destroy(ProcessingJob job) {
    libPhotoAssistantImageProcessingPINVOKE.ProcessingJob_destroy(ProcessingJob.getCPtr(job));
  }

  public ProcessingJob() : this(libPhotoAssistantImageProcessingPINVOKE.new_ProcessingJob(), true) {
  }

}

}
