//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class CropParams : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CropParams(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CropParams obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~CropParams() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_CropParams(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public bool enabled {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_enabled_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_enabled_get(swigCPtr);
      return ret;
    } 
  }

  public int x {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_x_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_x_get(swigCPtr);
      return ret;
    } 
  }

  public int y {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_y_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_y_get(swigCPtr);
      return ret;
    } 
  }

  public int w {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_w_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_w_get(swigCPtr);
      return ret;
    } 
  }

  public int h {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_h_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_h_get(swigCPtr);
      return ret;
    } 
  }

  public bool fixratio {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_fixratio_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_fixratio_get(swigCPtr);
      return ret;
    } 
  }

  public string ratio {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_ratio_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_ratio_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string orientation {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_orientation_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_orientation_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string guide {
    set {
      libPhotoAssistantImageProcessingPINVOKE.CropParams_guide_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.CropParams_guide_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public CropParams() : this(libPhotoAssistantImageProcessingPINVOKE.new_CropParams(), true) {
  }

  public void mapToResized(int resizedWidth, int resizedHeight, int scale, SWIGTYPE_p_int x1, SWIGTYPE_p_int x2, SWIGTYPE_p_int y1, SWIGTYPE_p_int y2) {
    libPhotoAssistantImageProcessingPINVOKE.CropParams_mapToResized(swigCPtr, resizedWidth, resizedHeight, scale, SWIGTYPE_p_int.getCPtr(x1), SWIGTYPE_p_int.getCPtr(x2), SWIGTYPE_p_int.getCPtr(y1), SWIGTYPE_p_int.getCPtr(y2));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
