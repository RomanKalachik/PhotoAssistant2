//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class Settings : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Settings(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Settings obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Settings() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_Settings(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public string iccDirectory {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_iccDirectory_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_iccDirectory_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int colorimetricIntent {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_colorimetricIntent_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_colorimetricIntent_get(swigCPtr);
      return ret;
    } 
  }

  public int viewingdevice {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_viewingdevice_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_viewingdevice_get(swigCPtr);
      return ret;
    } 
  }

  public int viewingdevicegrey {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_viewingdevicegrey_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_viewingdevicegrey_get(swigCPtr);
      return ret;
    } 
  }

  public int viewinggreySc {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_viewinggreySc_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_viewinggreySc_get(swigCPtr);
      return ret;
    } 
  }

  public int leveldnv {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnv_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnv_get(swigCPtr);
      return ret;
    } 
  }

  public int leveldnti {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnti_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnti_get(swigCPtr);
      return ret;
    } 
  }

  public int leveldnaut {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnaut_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnaut_get(swigCPtr);
      return ret;
    } 
  }

  public int leveldnliss {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnliss_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnliss_get(swigCPtr);
      return ret;
    } 
  }

  public int leveldnautsimpl {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnautsimpl_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_leveldnautsimpl_get(swigCPtr);
      return ret;
    } 
  }

  public string monitorProfile {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_monitorProfile_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_monitorProfile_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool autoMonitorProfile {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_autoMonitorProfile_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_autoMonitorProfile_get(swigCPtr);
      return ret;
    } 
  }

  public bool autocielab {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_autocielab_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_autocielab_get(swigCPtr);
      return ret;
    } 
  }

  public bool rgbcurveslumamode_gamut {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_rgbcurveslumamode_gamut_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_rgbcurveslumamode_gamut_get(swigCPtr);
      return ret;
    } 
  }

  public bool verbose {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_verbose_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_verbose_get(swigCPtr);
      return ret;
    } 
  }

  public string darkFramesPath {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_darkFramesPath_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_darkFramesPath_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string flatFieldsPath {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_flatFieldsPath_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_flatFieldsPath_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string adobe {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_adobe_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_adobe_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string prophoto {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_prophoto_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_prophoto_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string prophoto10 {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_prophoto10_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_prophoto10_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string widegamut {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_widegamut_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_widegamut_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string beta {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_beta_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_beta_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string best {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_best_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_best_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string bruce {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_bruce_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_bruce_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string srgb {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_srgb_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_srgb_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string srgb10 {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_srgb10_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.Settings_srgb10_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool gamutICC {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_gamutICC_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_gamutICC_get(swigCPtr);
      return ret;
    } 
  }

  public bool gamutLch {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_gamutLch_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_gamutLch_get(swigCPtr);
      return ret;
    } 
  }

  public bool ciecamfloat {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_ciecamfloat_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_ciecamfloat_get(swigCPtr);
      return ret;
    } 
  }

  public bool HistogramWorking {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_HistogramWorking_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_HistogramWorking_get(swigCPtr);
      return ret;
    } 
  }

  public int amchroma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_amchroma_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_amchroma_get(swigCPtr);
      return ret;
    } 
  }

  public int protectred {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_protectred_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_protectred_get(swigCPtr);
      return ret;
    } 
  }

  public double protectredh {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_protectredh_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_protectredh_get(swigCPtr);
      return ret;
    } 
  }

  public double nrauto {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_nrauto_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_nrauto_get(swigCPtr);
      return ret;
    } 
  }

  public double nrautomax {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_nrautomax_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_nrautomax_get(swigCPtr);
      return ret;
    } 
  }

  public double nrhigh {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_nrhigh_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_nrhigh_get(swigCPtr);
      return ret;
    } 
  }

  public int nrwavlevel {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_nrwavlevel_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_nrwavlevel_get(swigCPtr);
      return ret;
    } 
  }

  public bool daubech {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_daubech_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_daubech_get(swigCPtr);
      return ret;
    } 
  }

  public bool ciebadpixgauss {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_ciebadpixgauss_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.Settings_ciebadpixgauss_get(swigCPtr);
      return ret;
    } 
  }

  public int CRI_color {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_CRI_color_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_CRI_color_get(swigCPtr);
      return ret;
    } 
  }

  public int denoiselabgamma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_denoiselabgamma_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.Settings_denoiselabgamma_get(swigCPtr);
      return ret;
    } 
  }

  public double artifact_cbdl {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_artifact_cbdl_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_artifact_cbdl_get(swigCPtr);
      return ret;
    } 
  }

  public double level0_cbdl {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_level0_cbdl_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_level0_cbdl_get(swigCPtr);
      return ret;
    } 
  }

  public double level123_cbdl {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_level123_cbdl_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_level123_cbdl_get(swigCPtr);
      return ret;
    } 
  }

  public double bot_left {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_bot_left_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_bot_left_get(swigCPtr);
      return ret;
    } 
  }

  public double top_left {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_top_left_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_top_left_get(swigCPtr);
      return ret;
    } 
  }

  public double top_right {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_top_right_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_top_right_get(swigCPtr);
      return ret;
    } 
  }

  public double bot_right {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_bot_right_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_bot_right_get(swigCPtr);
      return ret;
    } 
  }

  public double ed_detec {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_ed_detec_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_ed_detec_get(swigCPtr);
      return ret;
    } 
  }

  public double ed_detecStr {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_ed_detecStr_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_ed_detecStr_get(swigCPtr);
      return ret;
    } 
  }

  public double ed_low {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_ed_low_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_ed_low_get(swigCPtr);
      return ret;
    } 
  }

  public double ed_lipinfl {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_ed_lipinfl_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_ed_lipinfl_get(swigCPtr);
      return ret;
    } 
  }

  public double ed_lipampl {
    set {
      libPhotoAssistantImageProcessingPINVOKE.Settings_ed_lipampl_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.Settings_ed_lipampl_get(swigCPtr);
      return ret;
    } 
  }

  public static Settings create() {
    global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.Settings_create();
    Settings ret = (cPtr == global::System.IntPtr.Zero) ? null : new Settings(cPtr, false);
    return ret;
  }

  public static void destroy(Settings s) {
    libPhotoAssistantImageProcessingPINVOKE.Settings_destroy(Settings.getCPtr(s));
  }

  public Settings() : this(libPhotoAssistantImageProcessingPINVOKE.new_Settings(), true) {
  }

}

}
