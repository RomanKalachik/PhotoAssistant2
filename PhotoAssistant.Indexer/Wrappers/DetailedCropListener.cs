//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class DetailedCropListener : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal DetailedCropListener(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(DetailedCropListener obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~DetailedCropListener() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_DetailedCropListener(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual void setDetailedCrop(IImage8 img, IImage8 imgtrue, ColorManagementParams cmp, CropParams cp, int cx, int cy, int cw, int ch, int skip) {
    libPhotoAssistantImageProcessingPINVOKE.DetailedCropListener_setDetailedCrop(swigCPtr, IImage8.getCPtr(img), IImage8.getCPtr(imgtrue), ColorManagementParams.getCPtr(cmp), CropParams.getCPtr(cp), cx, cy, cw, ch, skip);
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool getWindow(SWIGTYPE_p_int cx, SWIGTYPE_p_int cy, SWIGTYPE_p_int cw, SWIGTYPE_p_int ch, SWIGTYPE_p_int skip) {
    bool ret = libPhotoAssistantImageProcessingPINVOKE.DetailedCropListener_getWindow(swigCPtr, SWIGTYPE_p_int.getCPtr(cx), SWIGTYPE_p_int.getCPtr(cy), SWIGTYPE_p_int.getCPtr(cw), SWIGTYPE_p_int.getCPtr(ch), SWIGTYPE_p_int.getCPtr(skip));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DetailedCropListener() : this(libPhotoAssistantImageProcessingPINVOKE.new_DetailedCropListener(), true) {
  }

}

}
