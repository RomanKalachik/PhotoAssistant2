//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class ColorAppearanceParams : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ColorAppearanceParams(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ColorAppearanceParams obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ColorAppearanceParams() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_ColorAppearanceParams(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public bool enabled {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_enabled_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_enabled_get(swigCPtr);
      return ret;
    } 
  }

  public int degree {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_degree_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_degree_get(swigCPtr);
      return ret;
    } 
  }

  public bool autodegree {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_autodegree_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_autodegree_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t curve {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curve_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curve_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t curve2 {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curve2_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curve2_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t curve3 {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curve3_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curve3_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public ColorAppearanceParams.eTCModeId curveMode {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curveMode_set(swigCPtr, (int)value);
    } 
    get {
      ColorAppearanceParams.eTCModeId ret = (ColorAppearanceParams.eTCModeId)libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curveMode_get(swigCPtr);
      return ret;
    } 
  }

  public ColorAppearanceParams.eTCModeId curveMode2 {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curveMode2_set(swigCPtr, (int)value);
    } 
    get {
      ColorAppearanceParams.eTCModeId ret = (ColorAppearanceParams.eTCModeId)libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curveMode2_get(swigCPtr);
      return ret;
    } 
  }

  public ColorAppearanceParams.eCTCModeId curveMode3 {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curveMode3_set(swigCPtr, (int)value);
    } 
    get {
      ColorAppearanceParams.eCTCModeId ret = (ColorAppearanceParams.eCTCModeId)libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_curveMode3_get(swigCPtr);
      return ret;
    } 
  }

  public string surround {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_surround_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_surround_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double adapscen {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_adapscen_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_adapscen_get(swigCPtr);
      return ret;
    } 
  }

  public bool autoadapscen {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_autoadapscen_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_autoadapscen_get(swigCPtr);
      return ret;
    } 
  }

  public double adaplum {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_adaplum_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_adaplum_get(swigCPtr);
      return ret;
    } 
  }

  public int badpixsl {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_badpixsl_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_badpixsl_get(swigCPtr);
      return ret;
    } 
  }

  public string wbmodel {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_wbmodel_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_wbmodel_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string algo {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_algo_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_algo_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double contrast {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_contrast_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_contrast_get(swigCPtr);
      return ret;
    } 
  }

  public double qcontrast {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_qcontrast_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_qcontrast_get(swigCPtr);
      return ret;
    } 
  }

  public double jlight {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_jlight_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_jlight_get(swigCPtr);
      return ret;
    } 
  }

  public double qbright {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_qbright_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_qbright_get(swigCPtr);
      return ret;
    } 
  }

  public double chroma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_chroma_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_chroma_get(swigCPtr);
      return ret;
    } 
  }

  public double schroma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_schroma_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_schroma_get(swigCPtr);
      return ret;
    } 
  }

  public double mchroma {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_mchroma_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_mchroma_get(swigCPtr);
      return ret;
    } 
  }

  public double colorh {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_colorh_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_colorh_get(swigCPtr);
      return ret;
    } 
  }

  public double rstprotection {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_rstprotection_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_rstprotection_get(swigCPtr);
      return ret;
    } 
  }

  public bool surrsource {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_surrsource_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_surrsource_get(swigCPtr);
      return ret;
    } 
  }

  public bool gamut {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_gamut_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_gamut_get(swigCPtr);
      return ret;
    } 
  }

  public bool datacie {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_datacie_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_datacie_get(swigCPtr);
      return ret;
    } 
  }

  public bool tonecie {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_tonecie_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorAppearanceParams_tonecie_get(swigCPtr);
      return ret;
    } 
  }

  public ColorAppearanceParams() : this(libPhotoAssistantImageProcessingPINVOKE.new_ColorAppearanceParams(), true) {
  }

  public enum eTCModeId {
    TC_MODE_LIGHT,
    TC_MODE_BRIGHT
  }

  public enum eCTCModeId {
    TC_MODE_CHROMA,
    TC_MODE_SATUR,
    TC_MODE_COLORF
  }

}

}
