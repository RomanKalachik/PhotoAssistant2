//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class PreviewImage : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal PreviewImage(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(PreviewImage obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~PreviewImage() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_PreviewImage(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public PreviewImage(string fname, string ext, PreviewImage.PreviewImageMode mode) : this(libPhotoAssistantImageProcessingPINVOKE.new_PreviewImage(fname, ext, (int)mode), true) {
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  //public System.IntPtr getImagePtr() {
  //  global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.PreviewImage_getImagePtr(swigCPtr);
  //  //SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
  //  return cPtr;
  //}
        public SWIGTYPE_p_unsigned_char getImagePtr() {
            global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.PreviewImage_getImagePtr(swigCPtr);
            SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
            return ret;
        }

        public int getWidth() {
    int ret = libPhotoAssistantImageProcessingPINVOKE.PreviewImage_getWidth(swigCPtr);
    return ret;
  }

  public int getHeight() {
    int ret = libPhotoAssistantImageProcessingPINVOKE.PreviewImage_getHeight(swigCPtr);
    return ret;
  }

  public int getStride() {
    int ret = libPhotoAssistantImageProcessingPINVOKE.PreviewImage_getStride(swigCPtr);
    return ret;
  }

  public bool IsValid() {
    bool ret = libPhotoAssistantImageProcessingPINVOKE.PreviewImage_IsValid(swigCPtr);
    return ret;
  }

  public Format getPixelFormat() {
    Format ret = (Format)libPhotoAssistantImageProcessingPINVOKE.PreviewImage_getPixelFormat(swigCPtr);
    return ret;
  }

  public enum PreviewImageMode {
    PIM_EmbeddedPreviewOnly,
    PIM_EmbeddedOrRaw,
    PIM_ForceRaw
  }

}

}
