//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.7
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace PhotoAssistant.Indexer.Wrappers {

public class ColorToningParams : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ColorToningParams(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ColorToningParams obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ColorToningParams() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          libPhotoAssistantImageProcessingPINVOKE.delete_ColorToningParams(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public bool enabled {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_enabled_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_enabled_get(swigCPtr);
      return ret;
    } 
  }

  public bool autosat {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_autosat_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_autosat_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t opacityCurve {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_opacityCurve_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_opacityCurve_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t colorCurve {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_colorCurve_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_colorCurve_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public int satProtectionThreshold {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_satProtectionThreshold_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_satProtectionThreshold_get(swigCPtr);
      return ret;
    } 
  }

  public int saturatedOpacity {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_saturatedOpacity_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_saturatedOpacity_get(swigCPtr);
      return ret;
    } 
  }

  public int strength {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_strength_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_strength_get(swigCPtr);
      return ret;
    } 
  }

  public int balance {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_balance_set(swigCPtr, value);
    } 
    get {
      int ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_balance_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t hlColSat {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_hlColSat_set(swigCPtr, SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_hlColSat_get(swigCPtr);
      SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t shadowsColSat {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_shadowsColSat_set(swigCPtr, SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_shadowsColSat_get(swigCPtr);
      SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_rtengine__procparams__ThresholdT_int_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t clcurve {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_clcurve_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_clcurve_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_double_t cl2curve {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_cl2curve_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_cl2curve_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public string method {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_method_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_method_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string twocolor {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_twocolor_set(swigCPtr, value);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_twocolor_get(swigCPtr);
      if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public double redlow {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_redlow_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_redlow_get(swigCPtr);
      return ret;
    } 
  }

  public double greenlow {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_greenlow_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_greenlow_get(swigCPtr);
      return ret;
    } 
  }

  public double bluelow {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_bluelow_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_bluelow_get(swigCPtr);
      return ret;
    } 
  }

  public double redmed {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_redmed_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_redmed_get(swigCPtr);
      return ret;
    } 
  }

  public double greenmed {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_greenmed_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_greenmed_get(swigCPtr);
      return ret;
    } 
  }

  public double bluemed {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_bluemed_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_bluemed_get(swigCPtr);
      return ret;
    } 
  }

  public double redhigh {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_redhigh_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_redhigh_get(swigCPtr);
      return ret;
    } 
  }

  public double greenhigh {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_greenhigh_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_greenhigh_get(swigCPtr);
      return ret;
    } 
  }

  public double bluehigh {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_bluehigh_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_bluehigh_get(swigCPtr);
      return ret;
    } 
  }

  public double satlow {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_satlow_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_satlow_get(swigCPtr);
      return ret;
    } 
  }

  public double sathigh {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_sathigh_set(swigCPtr, value);
    } 
    get {
      double ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_sathigh_get(swigCPtr);
      return ret;
    } 
  }

  public bool lumamode {
    set {
      libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_lumamode_set(swigCPtr, value);
    } 
    get {
      bool ret = libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_lumamode_get(swigCPtr);
      return ret;
    } 
  }

  public ColorToningParams() : this(libPhotoAssistantImageProcessingPINVOKE.new_ColorToningParams(), true) {
  }

  public void setDefaults() {
    libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_setDefaults(swigCPtr);
  }

  public void mixerToCurve(SWIGTYPE_p_std__vectorT_double_t colorCurve, SWIGTYPE_p_std__vectorT_double_t opacityCurve) {
    libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_mixerToCurve(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(colorCurve), SWIGTYPE_p_std__vectorT_double_t.getCPtr(opacityCurve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public void slidersToCurve(SWIGTYPE_p_std__vectorT_double_t colorCurve, SWIGTYPE_p_std__vectorT_double_t opacityCurve) {
    libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_slidersToCurve(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(colorCurve), SWIGTYPE_p_std__vectorT_double_t.getCPtr(opacityCurve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public void getCurves(SWIGTYPE_p_rtengine__ColorGradientCurve colorCurveLUT, SWIGTYPE_p_rtengine__OpacityCurve opacityCurveLUT, SWIGTYPE_p_a_3__double xyz_rgb, SWIGTYPE_p_a_3__double rgb_xyz, SWIGTYPE_p_bool opautili) {
    libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_getCurves(swigCPtr, SWIGTYPE_p_rtengine__ColorGradientCurve.getCPtr(colorCurveLUT), SWIGTYPE_p_rtengine__OpacityCurve.getCPtr(opacityCurveLUT), SWIGTYPE_p_a_3__double.getCPtr(xyz_rgb), SWIGTYPE_p_a_3__double.getCPtr(rgb_xyz), SWIGTYPE_p_bool.getCPtr(opautili));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void getDefaultColorCurve(SWIGTYPE_p_std__vectorT_double_t curve) {
    libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_getDefaultColorCurve(SWIGTYPE_p_std__vectorT_double_t.getCPtr(curve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void getDefaultOpacityCurve(SWIGTYPE_p_std__vectorT_double_t curve) {
    libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_getDefaultOpacityCurve(SWIGTYPE_p_std__vectorT_double_t.getCPtr(curve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void getDefaultCLCurve(SWIGTYPE_p_std__vectorT_double_t curve) {
    libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_getDefaultCLCurve(SWIGTYPE_p_std__vectorT_double_t.getCPtr(curve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void getDefaultCL2Curve(SWIGTYPE_p_std__vectorT_double_t curve) {
    libPhotoAssistantImageProcessingPINVOKE.ColorToningParams_getDefaultCL2Curve(SWIGTYPE_p_std__vectorT_double_t.getCPtr(curve));
    if (libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Pending) throw libPhotoAssistantImageProcessingPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
