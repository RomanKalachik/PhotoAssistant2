<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:PhotoAssistant.Controls.Wpf"
    xmlns:controls="clr-namespace:PhotoAssistant.Controls.Wpf" 
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    
    xmlns:ValueEditors="clr-namespace:Microsoft.Expression.Utility.ValueEditors;assembly=Microsoft.Expression.Utility"
    xmlns:dxcore="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxeditors="http://schemas.devexpress.com/winfx/2008/xaml/editors">

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Transparent" Offset="0.0"/>
        <GradientStop Color="Transparent" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="White"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Transparent" Offset="0.0"/>
        <GradientStop Color="Transparent" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FFE3E3E3"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FFE3E3E3"/>
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Transparent" Offset="0.0"/>
        <GradientStop Color="Transparent" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FFC3C3C3"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Transparent" Offset="0.0"/>
        <GradientStop Color="Transparent" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FFC3C3C3"/>
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="Transparent" Offset="0.0"/>
        <GradientStop Color="Transparent" Offset="1.0"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FFC3C3C3"/>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                            <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                            <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="dropDownBorder" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="1,1,1,0" Background="#80000000">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="CaretBrush" Value="#FFC3C3C3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                <Border x:Name="dropDownBorder" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="1,1,1,0" Background="#80000000">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
            <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="AnimationComboStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBox.Static.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#FFC3C3C3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" Duration="0:0:0.200">
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="8"/>
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="12"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" Duration="0:0:0.200">
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="12"/>
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="8"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" Duration="0:0:0.200">
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="8"/>
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="10"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" CornerRadius="4" Margin="8" Background="Transparent" BorderThickness="1" BorderBrush="#FFC3C3C3"/>
                        <ContentPresenter Content="{TemplateBinding Property=Content}" Margin="15"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyleSmall" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" Duration="0:0:0.200">
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="3"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" Duration="0:0:0.200">
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="3"/>
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="border" Storyboard.TargetProperty="Margin" Duration="0:0:0.200">
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                            <SplineThicknessKeyFrame KeyTime="0:0:0.2" Value="2"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="border" CornerRadius="2" Margin="3" Background="Transparent" BorderThickness="1" BorderBrush="#FFC3C3C3"/>
                        <ContentPresenter Content="{TemplateBinding Property=Content}" Margin="5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="SliderThumb.Static.Foreground" Color="#FFE5E5E5"/>
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border" Color="#FF808080"/>
    <SolidColorBrush x:Key="SliderThumb.Pressed.Background" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="SliderThumb.Pressed.Border" Color="#FF808080"/>
    <SolidColorBrush x:Key="SliderThumb.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="SliderThumb.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="SliderThumb.Static.Background" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="SliderThumb.Static.Border" Color="#FFACACAC"/>
    <ControlTemplate x:Key="SliderThumbHorizontalTop" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalBottom" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <SolidColorBrush x:Key="SliderThumb.Track.Border" Color="#FFC3C3C3"/>
    <SolidColorBrush x:Key="SliderThumb.Track.Background" Color="Transparent"/>
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SliderThumbHorizontalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Rectangle x:Name="grip" Width="11" Height="11" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" SnapsToDevicePixels="True" Stroke="{StaticResource SliderThumb.Static.Border}" StrokeThickness="1" UseLayoutRounding="True" VerticalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,0,0,2" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Margin="0,2,0,0" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Height="1.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange" Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="1.0" Visibility="Hidden"/>
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbHorizontalDefault}" VerticalAlignment="Center" Width="11"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalTop}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbHorizontalBottom}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalLeft" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalRight" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalDefault" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
            <Path x:Name="grip" Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z" Fill="{StaticResource SliderThumb.Static.Background}" Stretch="Fill" Stroke="{StaticResource SliderThumb.Static.Border}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.MouseOver.Border}"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Pressed.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Background}"/>
                <Setter Property="Stroke" TargetName="grip" Value="{StaticResource SliderThumb.Disabled.Border}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Margin="0,0,2,0" Placement="Left" Visibility="Collapsed" Width="4"/>
                <TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Margin="2,0,0,0" Placement="Right" Visibility="Collapsed" Width="4"/>
                <Border x:Name="TrackBackground" BorderBrush="{StaticResource SliderThumb.Track.Border}" BorderThickness="1" Background="{StaticResource SliderThumb.Track.Background}" Grid.Column="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
                    <Canvas Margin="-1,-6">
                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4.0"/>
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource RepeatButtonTransparent}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb" Focusable="False" Height="11" OverridesDefaultStyle="True" Template="{StaticResource SliderThumbVerticalDefault}" VerticalAlignment="Top" Width="18"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalLeft}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Template" TargetName="Thumb" Value="{StaticResource SliderThumbVerticalRight}"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SliderThumb.Static.Foreground}"/>
        <Setter Property="Template" Value="{StaticResource SliderHorizontal}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource SliderVertical}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ObjectDataProvider MethodName="GetValues"
		ObjectType="{x:Type sys:Enum}"
		x:Key="EffectItems">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="controls:PicturePreviewEffectType" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <Style x:Key="TimeTextBoxStyle" TargetType="{x:Type TextBox}">
        <Style.BasedOn>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#FFC3C3C3"/>
                <Setter Property="Foreground" Value="#FFC3C3C3"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}"/>
                <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}"/>
                <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="6,1,5,2"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="CaretBrush" Value="#FFC3C3C3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="{DynamicResource InsetInputBoxCornerRadius}" Focusable="False" Uid="Border_17">
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Uid="ScrollViewer_1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource InputDisabledForegroundBrush}"/>
                        <Setter Property="Background" Value="{DynamicResource InputDisabledBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource InputDisabledBorderBrush}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsReadOnly" Value="True"/>
                            <!--<Condition Property="ValueEditors:ValueEditorUtilities.HasReadOnlyWrapper" Value="True"/>-->
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource InputDisabledBackgroundBrush}"/>
                        <Setter Property="Foreground" Value="{DynamicResource InputDisabledForegroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource InputDisabledBorderBrush}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
    </Style>

    <local:DoubleToStringConverter x:Key="dsConverter" />

    <Style x:Key="LoadingIndicatorStyle" TargetType="{x:Type Control}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="64"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid x:Name="TemplateRoot" Background="Transparent" SnapsToDevicePixels="true">
                        <Path x:Name="Path" Stretch="Uniform" Data="F1 M 16,0C 17.1046,0 18,0.895433 18,2C 18,3.10457 17.1046,4 16,4C 14.8954,4 14,3.10457 14,2C 14,0.895433 14.8954,0 16,0 Z M 23,2.00003C 24.1045,2.00003 25,2.89546 25,4.00003C 25,5.1046 24.1045,6.00003 23,6.00003C 21.8954,6.00003 21,5.1046 21,4.00003C 21,2.89546 21.8954,2.00003 23,2.00003 Z M 28,7.00002C 29.1045,7.00002 30,7.89546 30,9.00002C 30,10.1046 29.1045,11 28,11C 26.8954,11 26,10.1046 26,9.00002C 26,7.89546 26.8954,7.00002 28,7.00002 Z M 30,14C 31.1045,14 32,14.8954 32,16C 32,17.1046 31.1045,18 30,18C 28.8954,18 28,17.1046 28,16C 28,14.8954 28.8954,14 30,14 Z M 28,21C 29.1045,21 30,21.8954 30,23C 30,24.1046 29.1045,25 28,25C 26.8954,25 26,24.1046 26,23C 26,21.8954 26.8954,21 28,21 Z M 23,26C 24.1045,26 25,26.8954 25,28C 25,29.1046 24.1046,30 23,30C 21.8954,30 21,29.1046 21,28C 21,26.8954 21.8954,26 23,26 Z M 16,28C 17.1046,28 18,28.8954 18,30C 18,31.1046 17.1046,32 16,32C 14.8954,32 14,31.1046 14,30C 14,28.8954 14.8954,28 16,28 Z M 9,26C 10.1046,26 11,26.8954 11,28C 11,29.1046 10.1046,30 9,30C 7.89543,30 7,29.1046 7,28C 7,26.8954 7.89543,26 9,26 Z M 4,21C 5.10457,21 6,21.8954 6,23C 6,24.1046 5.10457,25 4,25C 2.89543,25 2,24.1046 2,23C 2,21.8954 2.89543,21 4,21 Z M 2,14C 3.10457,14 4,14.8954 4,16C 4,17.1046 3.10457,18 2,18C 0.895431,18 1.19209e-006,17.1046 1.19209e-006,16C 1.19209e-006,14.8954 0.895431,14 2,14 Z M 4,7.00001C 5.10457,7.00001 6,7.89544 6,9.00001C 6,10.1046 5.10457,11 4,11C 2.89543,11 2,10.1046 2,9.00001C 2,7.89544 2.89543,7.00001 4,7.00001 Z M 9,2C 10.1046,2 11,2.89544 11,4C 11,5.10457 10.1046,6 9,6C 7.89543,6 7,5.10457 7,4C 7,2.89544 7.89543,2 9,2 Z " HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Fill="White" Stroke="#7F000000">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Path" RepeatBehavior="Forever">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="359 "/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="PicturePreviewCompactTemplate" TargetType="{x:Type controls:PicturePreviewControl}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Panels">
                    <VisualState x:Name="ShowPanels">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CaptionPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ToolbarPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ToolbarPanel" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0.2">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.2" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HidePanels">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CaptionPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1.0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ToolbarPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1.0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ToolbarPanel" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0.2">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.2" Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SlideShowStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="slideShowImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.100" To="1.0">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="pauseImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.100" To="0.0">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="SlideShow">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="slideShowImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.100" To="0.0">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="pauseImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.100" To="1.0">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid x:Name="CaptionPanel" Background="#a0000000" Opacity="0.0">
                <dxcore:TransferControl Content="{Binding FileInfoText}" Style="{StaticResource {dxt:TransferControlThemeKey ResourceKey=TransferControl_FadeStyle}}">
                    <dxcore:TransferControl.ContentTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" 
								Foreground="#FFFFFFFF" 
								Margin="0,3,0,3"
                                FontSize="12"
								TextTrimming="CharacterEllipsis" 
								TextWrapping="NoWrap" 
								HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </DataTemplate>
                    </dxcore:TransferControl.ContentTemplate>
                </dxcore:TransferControl>
                <Button x:Name="backButton" Style="{StaticResource ButtonStyle}" Command="{Binding ExitCommand}" HorizontalAlignment="Right">
                    <Button.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding PanelScaleFactor, RelativeSource={RelativeSource TemplatedParent}}"
                                                ScaleY="{Binding PanelScaleFactor, RelativeSource={RelativeSource TemplatedParent}}"/>    
                    </Button.LayoutTransform>
                    <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Close_32x32.png" Stretch="None"/>
                </Button>

            </Grid>
            <Grid x:Name="ToolbarPanel" Background="#a0000000" Opacity="0.0" Grid.Row="2">
                <Grid HorizontalAlignment="Center" Margin="0">
                    <Grid.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding PanelScaleFactor, RelativeSource={RelativeSource TemplatedParent}}"
                                                ScaleY="{Binding PanelScaleFactor, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid.LayoutTransform>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="rotateLeftButton" Grid.Column="0" Style="{StaticResource ButtonStyle}" Command="{Binding RotateLetCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/RotateLeft_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="rotateRightButton" Grid.Column="1" Style="{StaticResource ButtonStyle}" Command="{Binding RotateRightCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/RotateRight_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="firtButton" Grid.Column="3" Style="{StaticResource ButtonStyle}" Command="{Binding FirstCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/First_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="prevPageButton" Grid.Column="4" Style="{StaticResource ButtonStyle}" Command="{Binding PrevPageCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/DoublePrev_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="prevButton" Grid.Column="5" Style="{StaticResource ButtonStyle}" Command="{Binding PrevCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Prev_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="nextButton" Grid.Column="6" Style="{StaticResource ButtonStyle}" Command="{Binding NextCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Next_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="nextPageButton" Grid.Column="7" Style="{StaticResource ButtonStyle}" Command="{Binding NextPageCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/DoubleNext_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="lastButton" Grid.Column="8" Style="{StaticResource ButtonStyle}" Command="{Binding LastCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Last_32x32.png" Stretch="None"/>
                    </Button>
                </Grid>
            </Grid>
            <Control x:Name="PART_LoadingIndicator" Style="{StaticResource LoadingIndicatorStyle}" Visibility="Collapsed" Grid.Row="1"/>
        </Grid>
    </ControlTemplate>
    
    <ControlTemplate x:Key="PicturePreviewFullTemplate" TargetType="{x:Type controls:PicturePreviewControl}">
        <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="Panels">
                    <VisualState x:Name="ShowPanels">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CaptionPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ToolbarPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ToolbarPanel" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0.2">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="False"/>
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.2" Value="True"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="HidePanels">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CaptionPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1.0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ToolbarPanel" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2">
                                <SplineDoubleKeyFrame KeyTime="0" Value="1.0"/>
                                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0.0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ToolbarPanel" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0.2">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True"/>
                                <DiscreteBooleanKeyFrame KeyTime="0:0:0.2" Value="False"/>
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SlideShowStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="slideShowImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.100" To="1.0">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="pauseImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.100" To="0.0">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="SlideShow">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="slideShowImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.100" To="0.0">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetName="pauseImage" Storyboard.TargetProperty="Opacity" Duration="00:00:00.100" To="1.0">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid x:Name="CaptionPanel" Background="#a0000000" Opacity="0.0">
                <dxcore:TransferControl Content="{Binding FileInfoText}" Style="{StaticResource {dxt:TransferControlThemeKey ResourceKey=TransferControl_FadeStyle}}">
                    <dxcore:TransferControl.ContentTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding }" 
								Foreground="#FFFFFFFF" 
								Margin="0,10,0,10" 
								TextTrimming="CharacterEllipsis" 
								TextWrapping="NoWrap" 
								HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </dxcore:TransferControl.ContentTemplate>
                </dxcore:TransferControl>
            </Grid>
            <Grid x:Name="ToolbarPanel" Background="#a0000000" Opacity="0.0" Grid.Row="2">
                <Grid HorizontalAlignment="Center" Margin="0">
                    <Grid.LayoutTransform>
                        <ScaleTransform ScaleX="{Binding PanelScaleFactor, RelativeSource={RelativeSource TemplatedParent}}"
                                                ScaleY="{Binding PanelScaleFactor, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid.LayoutTransform>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="200"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="backButton" Style="{StaticResource ButtonStyle}" Command="{Binding ExitCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Close_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="rotateLeftButton" Grid.Column="2" Style="{StaticResource ButtonStyle}" Command="{Binding RotateLetCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/RotateLeft_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="rotateRightButton" Grid.Column="3" Style="{StaticResource ButtonStyle}" Command="{Binding RotateRightCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/RotateRight_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="firtButton" Grid.Column="5" Style="{StaticResource ButtonStyle}" Command="{Binding FirstCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/First_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="prevPageButton" Grid.Column="6" Style="{StaticResource ButtonStyle}" Command="{Binding PrevPageCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/DoublePrev_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="prevButton" Grid.Column="7" Style="{StaticResource ButtonStyle}" Command="{Binding PrevCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Prev_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="slideShowButton" Grid.Column="8" Style="{StaticResource ButtonStyle}" Command="{Binding SlideShowCommand}">
                        <Grid>
                            <Image x:Name="slideShowImage" Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/SlideShow_32x32.png" Stretch="None"/>
                            <Image x:Name="pauseImage" Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Pause_32x32.png" Stretch="None" Opacity="0.0"/>
                        </Grid>
                    </Button>
                    <Button x:Name="nextButton" Grid.Column="9" Style="{StaticResource ButtonStyle}" Command="{Binding NextCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Next_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="nextPageButton" Grid.Column="10" Style="{StaticResource ButtonStyle}" Command="{Binding NextPageCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/DoubleNext_32x32.png" Stretch="None"/>
                    </Button>
                    <Button x:Name="lastButton" Grid.Column="11" Style="{StaticResource ButtonStyle}" Command="{Binding LastCommand}">
                        <Image Source="pack://application:,,,/PhotoAssistant.Controls.Wpf;component/Images/Last_32x32.png" Stretch="None"/>
                    </Button>
                    <ComboBox x:Name="animationCombo" Style="{StaticResource AnimationComboStyle}" 
									SelectedValue="{Binding EffectType, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
									ItemsSource="{Binding Source={StaticResource EffectItems}}"
									Grid.Column="17" Width="150" VerticalAlignment="Center"/>
                    <Button x:Name="timeDecrease" Grid.Column="18" Style="{StaticResource ButtonStyleSmall}" Command="{Binding DecrementTimeCommand}">
                        <Grid Width="11" Height="11" SnapsToDevicePixels="True">
                            <Border Width="9" Height="3" Background="#FFC3C3C3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Button>
                    <TextBox x:Name="timeEdit" Grid.Column="19" Style="{StaticResource TimeTextBoxStyle}" Width="100" Text="{Binding ContentChangeAnimationDelay, Converter={StaticResource dsConverter}}"/>
                    <Button x:Name="timeIncrease" Grid.Column="20" Style="{StaticResource ButtonStyleSmall}" Command="{Binding IncrementTimeCommand}">
                        <Grid Width="11" Height="11" SnapsToDevicePixels="True">
                            <Border Width="9" Height="3" Background="#FFC3C3C3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Border Height="9" Width="3" Background="#FFC3C3C3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Button>
                </Grid>
            </Grid>
            <Control x:Name="PART_LoadingIndicator" Style="{StaticResource LoadingIndicatorStyle}"  Visibility="Collapsed" Grid.Row="1"/>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:PicturePreviewControl}">
        <Setter Property="Template" Value="{StaticResource PicturePreviewFullTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsCompactMode" Value="true">
                <Setter Property="Template" Value="{StaticResource PicturePreviewCompactTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <local:DoubleToThicknessConverter x:Key="DoubleToThickness"/>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />

    <DataTemplate x:Key="LeftImageWatermarkTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Image Source="{Binding Image}" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding ImageScale}" ScaleY="{Binding ImageScale}"/>
                </Image.LayoutTransform>
            </Image>

            <TextBlock Grid.Column="1"
                       Text="{Binding Text}"
                       FontFamily="{Binding FontFamily}"
                       FontSize="{Binding FontSize}"
                       FontWeight="{Binding FontWeight}"
                       FontStyle="{Binding FontStyle}"
                       VerticalAlignment="Center">
                <TextBlock.Foreground>
                    <SolidColorBrush x:Name="PART_Brush" Color="{Binding FontColor}"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="RightImageWatermarkTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Image Grid.Column="1" Source="{Binding Image}" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding ImageScale}" ScaleY="{Binding ImageScale}"/>
                </Image.LayoutTransform>
            </Image>
            <TextBlock Grid.Column="0"
                       Text="{Binding Text}"
                       FontFamily="{Binding FontFamily}"
                       FontSize="{Binding FontSize}"
                       FontWeight="{Binding FontWeight}"
                       FontStyle="{Binding FontStyle}"
                       VerticalAlignment="Center">
                <TextBlock.Foreground>
                    <SolidColorBrush x:Name="PART_Brush" Color="{Binding FontColor}"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TopImageWatermarkTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Image Grid.Row="0" Source="{Binding Image}" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding ImageScale}" ScaleY="{Binding ImageScale}"/>
                </Image.LayoutTransform>
            </Image>
            <TextBlock Grid.Row="1"
                       Text="{Binding Text}"
                       FontFamily="{Binding FontFamily}"
                       FontSize="{Binding FontSize}"
                       FontWeight="{Binding FontWeight}"
                       FontStyle="{Binding FontStyle}"
                       VerticalAlignment="Center">
                <TextBlock.Foreground>
                    <SolidColorBrush x:Name="PART_Brush" Color="{Binding FontColor}"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BottomImageWatermarkTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Image Grid.Row="1" Source="{Binding Image}" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Image.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding ImageScale}" ScaleY="{Binding ImageScale}"/>
                </Image.LayoutTransform>
            </Image>
            <TextBlock Grid.Row="0"
                       Text="{Binding Text}"
                       FontFamily="{Binding FontFamily}"
                       FontSize="{Binding FontSize}"
                       FontWeight="{Binding FontWeight}"
                       FontStyle="{Binding FontStyle}"
                       VerticalAlignment="Center">
                <TextBlock.Foreground>
                    <SolidColorBrush x:Name="PART_Brush" Color="{Binding FontColor}"/>
                </TextBlock.Foreground>
            </TextBlock>
        </Grid>
    </DataTemplate>

    <Style x:Key="{x:Type local:WatermarkControl}" TargetType="{x:Type local:WatermarkControl}">
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="TopImageTemplate" Value="{StaticResource TopImageWatermarkTemplate}"/>
        <Setter Property="BottomImageTemplate" Value="{StaticResource BottomImageWatermarkTemplate}"/>
        <Setter Property="LeftImageTemplate" Value="{StaticResource LeftImageWatermarkTemplate}"/>
        <Setter Property="RightImageTemplate" Value="{StaticResource RightImageWatermarkTemplate}"/>
        <Setter Property="ActualContentTemplate" Value="{StaticResource LeftImageWatermarkTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WatermarkControl}">
                    <Border>
                        <Border Opacity="{Binding Params.Opacity, RelativeSource={RelativeSource TemplatedParent}}" Margin="{Binding Path=Params.WatermarkMargins, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border.Background>
                                <VisualBrush x:Name="PART_Brush" Stretch="None" 
                                         Viewport="{Binding Viewport, RelativeSource={RelativeSource TemplatedParent}}" 
                                         TileMode="{Binding TileMode, RelativeSource={RelativeSource TemplatedParent}}" 
                                         AlignmentX="{Binding AlignmentX, RelativeSource={RelativeSource TemplatedParent}}" 
                                         AlignmentY="{Binding AlignmentY, RelativeSource={RelativeSource TemplatedParent}}">
                                    <VisualBrush.Visual>
                                        <ContentControl x:Name="PART_ContentControl" Content="{TemplateBinding Params}" ContentTemplate="{TemplateBinding ActualContentTemplate}"/>
                                    </VisualBrush.Visual>
                                    <VisualBrush.Transform>
                                        <RotateTransform Angle="{Binding RotateAngle, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </VisualBrush.Transform>
                                </VisualBrush>
                            </Border.Background>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{x:Type local:SimpleImage}" TargetType="{x:Type local:SimpleImage}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SimpleImage}">
                    <Border BorderThickness="1" BorderBrush="#FF007ACC" Visibility="{Binding Selected, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BooleanToVisibility}}">
                        <Border BorderThickness="1" BorderBrush="#FFB1D6F0">
                            <Border BorderThickness="1" BorderBrush="#FF007ACC">
                                <Control x:Name="PART_LoadingIndicator" Style="{StaticResource LoadingIndicatorStyle}" Visibility="Collapsed"/>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrintableSimpleImage" TargetType="{x:Type local:SimpleImage}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SimpleImage}">
                    <Grid></Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:WatermarkPreviewControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WatermarkPreviewControl}">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Background="Pink" Margin="30">
                        <Image Source="{Binding Image, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Border>
                            <Border.Background>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <local:WatermarkControl 
                                            Width="{Binding ImageWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                            Height="{Binding ImageHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                            Params="{TemplateBinding WatermarkParameters}"
                                            ShowWatermark="{Binding Params.ShowWatermark, RelativeSource={RelativeSource Self}}"
                                            Text="{Binding Params.Text, RelativeSource={RelativeSource Self}}"
                                            ImageUri="{Binding Params.ImageUri, RelativeSource={RelativeSource Self}}"
                                            Layout="{Binding Params.Layout, RelativeSource={RelativeSource Self}}"
                                            ImageToTextAlignment="{Binding Params.ImageToTextAlignment, RelativeSource={RelativeSource Self}}"
                                            RotateAngle="{Binding Params.RotateAngle, RelativeSource={RelativeSource Self}}"
                                            FontColor="{Binding Params.FontColor, RelativeSource={RelativeSource Self}}"
                                            FontSize="{Binding Params.FontSize, RelativeSource={RelativeSource Self}}"
                                            WatermarkFontSize="{Binding Params.FontSize, RelativeSource={RelativeSource Self}}"
                                            WatermarkIndent="{Binding Params.WatermarkIndent, RelativeSource={RelativeSource Self}}"
                                            FontFamily="{Binding Params.FontFamily, RelativeSource={RelativeSource Self}}"
                                            FontStyle="{Binding Params.FontStyle, RelativeSource={RelativeSource Self}}"
                                            FontWeight="{Binding Params.FontWeight, RelativeSource={RelativeSource Self}}"/>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:PrintablePageControl}">
        <Setter Property="ItemsPanel" Value="{Binding PageInfo.PageLayout.PanelTemplate, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemsSource" Value="{Binding PageInfo.Files, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl 
                        Style="{Binding PhotoLayout.PageLayout.PictureBorderStyle}"
                        Grid.Column="{Binding PhotoLayout.Column}"
                        Grid.Row="{Binding PhotoLayout.Row}"
                        Grid.ColumnSpan="{Binding PhotoLayout.ColumnSpan}"
                        Grid.RowSpan="{Binding PhotoLayout.RowSpan}">
                        <Grid>
                            <local:SimpleImage 
                                Source="{Binding ImageSource}" 
                                PhotoLayout="{Binding PhotoLayout}"
                                PhotoInfo="{Binding }"
                                PageInfo="{Binding PageInfo}"
                                Stretch="{Binding PhotoLayout.ImageFit}"
                                RotateToFit="{Binding PhotoLayout.RotateToFit}"/>
                            <local:WatermarkControl ClipToBounds="True"
                                                    Params="{Binding PhotoLayout.PageLayout.PrintControl.Watermark}"
                                                    ShowWatermark="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.ShowWatermark}"
                                                    Text="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.Text}"
                                                    ImageUri="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.ImageUri}"
                                                    Layout="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.Layout}"
                                                    ImageToTextAlignment="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.ImageToTextAlignment}"
                                                    RotateAngle="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.RotateAngle}"
                                                    Opacity="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.Opacity}"
                                                    FontColor="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontColor}"
                                                    FontSize="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontSize}"
                                                    WatermarkFontSize="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontSize}"
                                                    WatermarkIndent="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.WatermarkIndent}"
                                                    FontFamily="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontFamily}"
                                                    FontStyle="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontStyle}"
                                                    FontWeight="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontWeight}"
                                                    />
                            <Border BorderThickness="{Binding PhotoLayout.BorderThickness, Converter={StaticResource DoubleToThickness}}"
                                    HorizontalAlignment="{Binding PhotoLayout.LabelHorizontalAlignment}"
                                    VerticalAlignment="{Binding PhotoLayout.LabelVerticalAlignment}"
                                    Visibility="{Binding PhotoLayout.ShowLabel, Converter={StaticResource BooleanToVisibility}}"
                                    Padding="{Binding PhotoLayout.LabelPaddingPixels, Converter={StaticResource DoubleToThickness}}">
                                <Border.BorderBrush>
                                    <SolidColorBrush x:Name="PART_LabelBorderBrush" Color="{Binding PhotoLayout.LabelBorderColor}"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush x:Name="PART_LabelBackBrush" Color="{Binding PhotoLayout.LabelBackgroundColor}"/>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="1" Text="{Binding LabelText}" 
                                               FontFamily="{Binding PhotoLayout.FontFamily}" 
                                            FontSize="{Binding PhotoLayout.FontSize}" 
                                               FontWeight="{Binding PhotoLayout.FontWeight}"
                                            FontStyle="{Binding PhotoLayout.FontStyle}"
                                            TextTrimming="CharacterEllipsis">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush x:Name="PART_FontBrush" Color="{Binding PhotoLayout.FontColor}"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                    <TextBlock Grid.Column="2" Text="{Binding PhotoInfoText}"
                                                FontFamily="{Binding PhotoLayout.FontFamily}" 
                                            FontSize="{Binding PhotoLayout.FontSize}" 
                                               FontWeight="{Binding PhotoLayout.FontWeight}"
                                            FontStyle="{Binding PhotoLayout.FontStyle}"
                                               TextTrimming="CharacterEllipsis">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush x:Name="PART_FontBrush2" Color="{Binding PhotoLayout.FontColor}"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </Grid>
                                <Border.LayoutTransform>
                                    <RotateTransform Angle="{Binding PhotoLayout.RotateAngle}"/>
                                </Border.LayoutTransform>
                            </Border>
                        </Grid>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PageControl}">
                    <Grid SnapsToDevicePixels="True">
                        <Control Style="{Binding PageInfo.PageLayout.PageBackgroundStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <local:PhotoBorder Padding="{Binding PageInfo.PageLayout.PageMarginsPixels, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Width="{Binding PageInfo.PageLayout.PrintControl.PageWidthPixels, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Height="{Binding PageInfo.PageLayout.PrintControl.PageHeightPixels, RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsPresenter/>
                        </local:PhotoBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:PageControl}">
        <Setter Property="ItemsPanel" Value="{Binding PageInfo.PageLayout.PanelTemplate, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemsSource" Value="{Binding PageInfo.Files, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl 
                        Style="{Binding PhotoLayout.PageLayout.PictureBorderStyle}"
                        Grid.Column="{Binding PhotoLayout.Column}"
                        Grid.Row="{Binding PhotoLayout.Row}"
                        Grid.ColumnSpan="{Binding PhotoLayout.ColumnSpan}"
                        Grid.RowSpan="{Binding PhotoLayout.RowSpan}">
                        <Grid>
                            <local:SimpleImage 
                                Source="{Binding ImageSource}" 
                                PhotoLayout="{Binding PhotoLayout}"
                                PhotoInfo="{Binding }"
                                PageInfo="{Binding PageInfo}"
                                Stretch="{Binding PhotoLayout.ImageFit}"
                                RotateToFit="{Binding PhotoLayout.RotateToFit}"
                                Selected="{Binding Selected}"/>
                            <local:WatermarkControl ClipToBounds="True"
                                                    Params="{Binding PhotoLayout.PageLayout.PrintControl.Watermark}"
                                                    ShowWatermark="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.ShowWatermark}"
                                                    Text="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.Text}"
                                                    ImageUri="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.ImageUri}"
                                                    Layout="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.Layout}"
                                                    ImageToTextAlignment="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.ImageToTextAlignment}"
                                                    RotateAngle="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.RotateAngle}"
                                                    Opacity="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.Opacity}"
                                                    FontColor="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontColor}"
                                                    FontSize="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontSize}"
                                                    WatermarkIndent="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.WatermarkIndent}"
                                                    FontFamily="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontFamily}"
                                                    FontStyle="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontStyle}"
                                                    FontWeight="{Binding PhotoLayout.PageLayout.PrintControl.Watermark.FontWeight}"
                                                    />
                            <Border BorderThickness="{Binding PhotoLayout.BorderThickness, Converter={StaticResource DoubleToThickness}}"
                                    HorizontalAlignment="{Binding PhotoLayout.LabelHorizontalAlignment}"
                                    VerticalAlignment="{Binding PhotoLayout.LabelVerticalAlignment}"
                                    Visibility="{Binding PhotoLayout.ShowLabel, Converter={StaticResource BooleanToVisibility}}"
                                    Padding="{Binding PhotoLayout.LabelPaddingPixels, Converter={StaticResource DoubleToThickness}}">
                                <Border.BorderBrush>
                                    <SolidColorBrush x:Name="PART_LabelBorderBrush" Color="{Binding PhotoLayout.LabelBorderColor}"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <SolidColorBrush x:Name="PART_LabelBackBrush" Color="{Binding PhotoLayout.LabelBackgroundColor}"/>
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="1" Text="{Binding LabelText}" 
                                               FontFamily="{Binding PhotoLayout.FontFamily}" 
                                            FontSize="{Binding PhotoLayout.FontSize}" 
                                               FontWeight="{Binding PhotoLayout.FontWeight}"
                                            FontStyle="{Binding PhotoLayout.FontStyle}"
                                            TextTrimming="CharacterEllipsis">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{Binding PhotoLayout.FontColor}"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                    <TextBlock Grid.Column="2" Text="{Binding PhotoInfoText}"
                                                FontFamily="{Binding PhotoLayout.FontFamily}" 
                                            FontSize="{Binding PhotoLayout.FontSize}" 
                                               FontWeight="{Binding PhotoLayout.FontWeight}"
                                            FontStyle="{Binding PhotoLayout.FontStyle}"
                                               TextTrimming="CharacterEllipsis">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush x:Name="PART_FontBrush" Color="{Binding PhotoLayout.FontColor}"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </Grid>
                                <Border.LayoutTransform>
                                    <RotateTransform Angle="{Binding PhotoLayout.RotateAngle}"/>
                                </Border.LayoutTransform>
                            </Border>
                        </Grid>
                    </ContentControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PageControl}">
                    <Grid SnapsToDevicePixels="True">
                        <Control Style="{Binding PageInfo.PageLayout.PageBackgroundStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <local:PhotoBorder Padding="{Binding PageInfo.PageLayout.PageMarginsPixels, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Width="{Binding PageInfo.PageLayout.PrintControl.PageWidthPixels, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Height="{Binding PageInfo.PageLayout.PrintControl.PageHeightPixels, RelativeSource={RelativeSource TemplatedParent}}">
                            <ItemsPresenter/>
                        </local:PhotoBorder>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BackgroundStyle_White" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border Background="White"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PictureBorderStyle_NoBorder" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PageNumberTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="26"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="PaperTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="{x:Type local:PageTransferControlEx}" TargetType="{x:Type local:PageTransferControlEx}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PageTransferControlEx}">
                    <Grid x:Name="PART_RootObject">
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                            Content="{TemplateBinding ActualContent}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}">
                        </ContentPresenter>
                        <ContentPresenter x:Name="PART_PrevContentPresenter"
                                          Content="{TemplateBinding PrevContent}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}">
                            <ContentPresenter.RenderTransform>
                                <TranslateTransform x:Name="PART_TranslateTransform" X="0" Y="0"/>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <local:PageLayoutCollection x:Key="DefaultLayouts">
        <local:PageLayoutTemplate Name="4 x 6" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <local:PhotoGrid/>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="6" Height="4" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="(2) 4 x 6" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="6" Height="4" />
                <local:PhotoLayoutTemplate Width="6" Height="4" Row="2" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="(1) 4 x 6 and (4) 2 x 3" PageMargins="0.19685" ImageIndent="0" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="6" Height="4" Row="0" Column="0" ColumnSpan="3" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="2" Column="0" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="2" Column="2" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="4" Column="0" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="4" Column="2" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="(1) 4 x 6 and (6) 2 x 3" PageMargins="0.19685" ImageIndent="0" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="6" Height="4" Row="0" Column="0" ColumnSpan="3" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="2" Column="0" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="2" Column="2" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="4" Column="0" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="4" Column="2" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="6" Column="0" />
                <local:PhotoLayoutTemplate Width="3" Height="2" Row="6" Column="2" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="5 x 7" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid/>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="7" Height="5" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="(2) 5 x 7" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="7" Height="5" />
                <local:PhotoLayoutTemplate Width="7" Height="5" Row="2" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="(2) 5 x 7 Centered" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="7" Height="5" />
                <local:PhotoLayoutTemplate Width="7" Height="5" Row="2" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="(1) 5 x 7 and (4) 2.5 x 3.5" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="7" Height="5" Row="0" Column="0" ColumnSpan="3" />
                <local:PhotoLayoutTemplate Width="3.5" Height="2.5" Row="2" Column="0" />
                <local:PhotoLayoutTemplate Width="3.5" Height="2.5" Row="2" Column="2" />
                <local:PhotoLayoutTemplate Width="3.5" Height="2.5" Row="4" Column="0" />
                <local:PhotoLayoutTemplate Width="3.5" Height="2.5" Row="4" Column="2" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="8 x 10" PageMargins="0.19685" ImageIndent="0" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid/>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Width="10" Height="8" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="Full Photo" PageMargins="0.19685" ImageIndent="0" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <local:PhotoGrid/>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="2 Photo" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Row="0"/>
                <local:PhotoLayoutTemplate Row="2"/>
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="4 Photo" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Row="0" Column="0"/>
                <local:PhotoLayoutTemplate Row="0" Column="2"/>
                <local:PhotoLayoutTemplate Row="2" Column="0"/>
                <local:PhotoLayoutTemplate Row="2" Column="2"/>
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="9 Photo" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Row="0" Column="0"/>
                <local:PhotoLayoutTemplate Row="0" Column="2"/>
                <local:PhotoLayoutTemplate Row="0" Column="4"/>
                <local:PhotoLayoutTemplate Row="2" Column="0"/>
                <local:PhotoLayoutTemplate Row="2" Column="2"/>
                <local:PhotoLayoutTemplate Row="2" Column="4"/>
                <local:PhotoLayoutTemplate Row="4" Column="0"/>
                <local:PhotoLayoutTemplate Row="4" Column="2"/>
                <local:PhotoLayoutTemplate Row="4" Column="4"/>
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="4 Wide" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Row="0"/>
                <local:PhotoLayoutTemplate Row="2"/>
                <local:PhotoLayoutTemplate Row="4"/>
                <local:PhotoLayoutTemplate Row="6"/>
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="2-Up Greeting Card" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Column="1"/>
                <local:PhotoLayoutTemplate Row="2" Column="1" />
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="4 x 5 Contact Sheet" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Row="0" Column="0"/>
                <local:PhotoLayoutTemplate Row="0" Column="2"/>
                <local:PhotoLayoutTemplate Row="0" Column="4"/>
                <local:PhotoLayoutTemplate Row="0" Column="6"/>

                <local:PhotoLayoutTemplate Row="2" Column="0"/>
                <local:PhotoLayoutTemplate Row="2" Column="2"/>
                <local:PhotoLayoutTemplate Row="2" Column="4"/>
                <local:PhotoLayoutTemplate Row="2" Column="6"/>

                <local:PhotoLayoutTemplate Row="4" Column="0"/>
                <local:PhotoLayoutTemplate Row="4" Column="2"/>
                <local:PhotoLayoutTemplate Row="4" Column="4"/>
                <local:PhotoLayoutTemplate Row="4" Column="6"/>

                <local:PhotoLayoutTemplate Row="6" Column="0"/>
                <local:PhotoLayoutTemplate Row="6" Column="2"/>
                <local:PhotoLayoutTemplate Row="6" Column="4"/>
                <local:PhotoLayoutTemplate Row="6" Column="6"/>

                <local:PhotoLayoutTemplate Row="10" Column="0"/>
                <local:PhotoLayoutTemplate Row="10" Column="2"/>
                <local:PhotoLayoutTemplate Row="10" Column="4"/>
                <local:PhotoLayoutTemplate Row="10" Column="6"/>
            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
        <local:PageLayoutTemplate Name="5 x 8 Contact Sheet" PageMargins="0.19685" ImageIndent="0.19685" PageBackgroundStyle="{StaticResource BackgroundStyle_White}" PictureBorderStyle="{StaticResource PictureBorderStyle_NoBorder}">
            <local:PageLayoutTemplate.PanelTemplate>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding PageLayout.ImageIndentPixels}"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="{Binding PageLayout.ImageIndentPixels}"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </local:PageLayoutTemplate.PanelTemplate>
            <local:PageLayoutTemplate.PhotoLayouts>
                <local:PhotoLayoutTemplate Row="0" Column="0"/>
                <local:PhotoLayoutTemplate Row="0" Column="2"/>
                <local:PhotoLayoutTemplate Row="0" Column="4"/>
                <local:PhotoLayoutTemplate Row="0" Column="6"/>
                <local:PhotoLayoutTemplate Row="0" Column="8"/>

                <local:PhotoLayoutTemplate Row="2" Column="0"/>
                <local:PhotoLayoutTemplate Row="2" Column="2"/>
                <local:PhotoLayoutTemplate Row="2" Column="4"/>
                <local:PhotoLayoutTemplate Row="2" Column="6"/>
                <local:PhotoLayoutTemplate Row="2" Column="8"/>

                <local:PhotoLayoutTemplate Row="4" Column="0"/>
                <local:PhotoLayoutTemplate Row="4" Column="2"/>
                <local:PhotoLayoutTemplate Row="4" Column="4"/>
                <local:PhotoLayoutTemplate Row="4" Column="6"/>
                <local:PhotoLayoutTemplate Row="4" Column="8"/>

                <local:PhotoLayoutTemplate Row="6" Column="0"/>
                <local:PhotoLayoutTemplate Row="6" Column="2"/>
                <local:PhotoLayoutTemplate Row="6" Column="4"/>
                <local:PhotoLayoutTemplate Row="6" Column="6"/>
                <local:PhotoLayoutTemplate Row="6" Column="8"/>

                <local:PhotoLayoutTemplate Row="8" Column="0"/>
                <local:PhotoLayoutTemplate Row="8" Column="2"/>
                <local:PhotoLayoutTemplate Row="8" Column="4"/>
                <local:PhotoLayoutTemplate Row="8" Column="6"/>
                <local:PhotoLayoutTemplate Row="8" Column="8"/>

                <local:PhotoLayoutTemplate Row="10" Column="0"/>
                <local:PhotoLayoutTemplate Row="10" Column="2"/>
                <local:PhotoLayoutTemplate Row="10" Column="4"/>
                <local:PhotoLayoutTemplate Row="10" Column="6"/>
                <local:PhotoLayoutTemplate Row="10" Column="8"/>

                <local:PhotoLayoutTemplate Row="12" Column="0"/>
                <local:PhotoLayoutTemplate Row="12" Column="2"/>
                <local:PhotoLayoutTemplate Row="12" Column="4"/>
                <local:PhotoLayoutTemplate Row="12" Column="6"/>
                <local:PhotoLayoutTemplate Row="12" Column="8"/>

                <local:PhotoLayoutTemplate Row="14" Column="0"/>
                <local:PhotoLayoutTemplate Row="14" Column="2"/>
                <local:PhotoLayoutTemplate Row="14" Column="4"/>
                <local:PhotoLayoutTemplate Row="14" Column="6"/>
                <local:PhotoLayoutTemplate Row="14" Column="8"/>

            </local:PageLayoutTemplate.PhotoLayouts>
        </local:PageLayoutTemplate>
    </local:PageLayoutCollection>

    <Style TargetType="{x:Type local:PicturePrintControl}">
        <Setter Property="PageLayouts" Value="{StaticResource DefaultLayouts}"/>
        <Setter Property="BackgroundStyle" Value="{StaticResource BackgroundStyle_White}"/>
        <Setter Property="PictureBorderStyle" Value="{StaticResource PictureBorderStyle_NoBorder}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PicturePrintControl}">
                    <Grid>
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <local:PageTransferControlEx  HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                     Content="{Binding SelectedPage, RelativeSource={RelativeSource TemplatedParent}}">
                                <local:PageTransferControlEx.ContentTemplate>
                                    <DataTemplate>
                                        <Grid Margin="32">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Background="Gray" Padding="1">
                                                <local:PageControl PageInfo="{Binding}" />
                                            </Border>
                                            <Border Width="5" Margin="0,5,0,0" Grid.Column="1" CornerRadius="0,2,0,0">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                        <GradientStop Color="#80000000"/>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Border Height="5" Margin="5,0,0,0" Grid.Row="1" CornerRadius="0,0,0,2">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <GradientStop Color="#80000000"/>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Border Width="5" Height="5" Grid.Column="1" Grid.Row="1" CornerRadius="0,0,2,0">
                                                <Border.Background>
                                                    <RadialGradientBrush Center="0,0">
                                                        <GradientStop Color="#80000000"/>
                                                        <GradientStop Offset="1" Color="#00000000"/>
                                                    </RadialGradientBrush>
                                                </Border.Background>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </local:PageTransferControlEx.ContentTemplate>
                            </local:PageTransferControlEx>
                        </ScrollViewer>
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20">
                            <TextBlock Style="{StaticResource PageNumberTextStyle}" Text="{Binding PageNumberText, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBlock Style="{StaticResource PaperTextStyle}" Text="{Binding PaperText, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <TextBlock Style="{StaticResource PaperTextStyle}" Text="{Binding PrinterText, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:ColorPickerColorControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ColorPickerColorControl}">
                    <Border Margin="0,0,1,1">
                        <Border.Background>
                            <SolidColorBrush Color="{Binding Path=ActualColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Border.Background>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type controls:ColorPickerControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <controls:ColorPickerGrid IsItemsHost="True" 
                                              controls:ColorPickerControl.RowCount="{Binding Path=(controls:ColorPickerControl.RowCount), RelativeSource={RelativeSource TemplatedParent}}"
                                              controls:ColorPickerControl.ColumnCount="{Binding Path=(controls:ColorPickerControl.ColumnCount), RelativeSource={RelativeSource TemplatedParent}}"
                                              />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <controls:ColorPickerColorControl Color="{Binding Color}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ColorPickerControl}">
                    <Border Padding="10,10,9,9">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                        
                            <TextBlock HorizontalAlignment="Center" Foreground="White" Text="Pick Target Color"/>
                            <ItemsPresenter Grid.Row="1"/>
                            <Grid Grid.Row="2" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Foreground="Gray" Text="R" Grid.Column="0" HorizontalAlignment="Right" Margin="0,0,5,0"/>
                                <TextBlock Foreground="Transparent" Text="100.0%" Grid.Column="1"/>
                                <TextBlock Foreground="White" Text="{Binding Path=RedChannelText, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
                                <TextBlock Foreground="Gray" Text="G" Grid.Column="2" HorizontalAlignment="Right" Margin="0,0,5,0"/>
                                <TextBlock Foreground="Transparent" Text="100.0%" Grid.Column="3"/>
                                <TextBlock Foreground="White" Text="{Binding Path=GreenChannelText, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="3"/>
                                <TextBlock Foreground="Gray" Text="B" Grid.Column="4" HorizontalAlignment="Right" Margin="0,0,5,0"/>
                                <TextBlock Foreground="Transparent" Text="100.0%" Grid.Column="5"/>
                                <TextBlock Foreground="White" Text="{Binding Path=BlueChannelText, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="5"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
